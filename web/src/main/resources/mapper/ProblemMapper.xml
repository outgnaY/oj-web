<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjtu.oj.web.mapper.ProblemMapper">
    <resultMap id="problemResultMap" type="com.sjtu.oj.web.model.Problem">
        <result property="problemId" column="problem_id"/>
        <result property="problemTitle" column="problem_title"/>
        <result property="problemDescription" column="problem_description"/>
        <result property="problemInputDescription" column="problem_input_description"/>
        <result property="problemOutputDescription" column="problem_output_description"/>
        <result property="problemSamples" column="problem_samples"/>
        <result property="problemTestcaseScore" column="problem_testcase_score"/>
        <result property="problemHint" column="problem_hint"/>
        <result property="problemCreateTime" column="problem_create_time"/>
        <result property="problemLastUpdate" column="problem_last_update"/>
        <result property="problemCreateBy" column="problem_create_by"/>
        <result property="problemTimeLimit" column="problem_time_limit"/>
        <result property="problemMemoryLimit" column="problem_memory_limit"/>
        <result property="problemAC" column="problem_ac"/>
        <result property="problemTotal" column="problem_total"/>
        <result property="problemTestcaseId" column="problem_testcaseId"/>
    </resultMap>
    <!--方法-->
    <select id="getNumberOfProblems"
            resultType="int"
            useCache="true" >
        SELECT COUNT(*) FROM oj_problems
    </select>
    <select id="getProblemById"
            resultMap="problemResultMap"
            useCache="true">
        SELECT * FROM oj_problems WHERE problem_id = #{id}
    </select>
    <select id="getProblemList"
            resultMap="problemResultMap"
            useCache="true">
        SELECT * FROM oj_problems ORDER BY problem_id LIMIT #{currentIndex}, #{pageSize}
    </select>
    <select id="getProblemListByKeyword"
            resultMap="problemResultMap"
            useCache="true">
        SELECT * FROM oj_problems WHERE problem_id LIKE concat('%', #{keyword}, '%') OR problem_title LIKE concat('%', #{keyword}, '%') ORDER BY problem_id
    </select>
    <delete id="deleteProblemById">
        DELETE FROM oj_problems WHERE problem_id = #{id}
    </delete>
    <insert id="createProblem">
        INSERT IGNORE INTO oj_problems
            (problem_id, problem_title, problem_description,
             problem_input_description, problem_output_description,
             problem_samples, problem_testcase_score, problem_hint,
             problem_create_time, problem_last_update, problem_create_by,
             problem_time_limit, problem_memory_limit, problem_ac, problem_total, problem_testcaseId)
        VALUES
            (#{problemId}, #{problemTitle}, #{problemDescription},
             #{problemInputDescription}, #{problemOutputDescription},
             #{problemSamples}, #{problemTestcaseScore}, #{problemHint},
             #{problemCreateTime}, #{problemLastUpdate}, #{problemCreateBy},
             #{problemTimeLimit}, #{problemMemoryLimit}, #{problemAC}, #{problemTotal}, #{problemTestcaseId})
    </insert>
    <update id="updateProblem">
        UPDATE oj_problems SET
        problem_title = #{problemTitle},
        problem_description = #{problemDescription},
        problem_input_description = #{problemInputDescription},
        problem_output_description = #{problemOutputDescription},
        problem_samples = #{problemSamples},
        problem_testcase_score = #{problemTestcaseScore},
        problem_hint = #{problemHint},
        problem_last_update = #{problemLastUpdate},
        problem_time_limit = #{problemTimeLimit},
        problem_memory_limit = #{problemMemoryLimit},
        problem_testcaseId = #{problemTestcaseId}
        WHERE problem_id = #{problemId}
    </update>
</mapper>
